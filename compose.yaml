#services:
#  cassandra:
#    image: 'cassandra:latest'
#    environment:
#      - 'CASSANDRA_DC=dc1'
#      - 'CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch'
#    ports:
#      - '9042'

#  postgres:
#    image: 'postgres:latest'
#    environment:
#      - 'POSTGRES_DB=mydatabase'
#      - 'POSTGRES_PASSWORD=secret'
#      - 'POSTGRES_USER=myuser'
#      - 'PGDATA=/data/postgres'
#    ports:
#      - '5432:5432'
#    networks:
#      - postgres
#    restart: unless-stopped
#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    volumes:
#      - pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres
#    restart: unless-stopped

#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: zookeeper
#    ports:
#      - "2181:2181"
#    networks:
#      - kafka-net
#  kafka:
#    image: wurstmeister/kafka
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
#      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: "baeldung:1:1"
#    networks:
#      - kafka-net
#networks:
#  kafka-net:
#    driver: bridge

version: '3'
services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_SERVER_ID: 1
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "22181:2181"
#
#  broker:
#    image: confluentinc/cp-kafka:latest
#    container_name: broker
#    ports:
#      - "9092:9092"
#    depends_on:
#      - zookeeper
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

#  userpostgres:
#    container_name: user_postgres
#    image: postgres
#    environment:
#      POSTGRES_USER: User
#      POSTGRES_PASSWORD: password
#      PGDATA: /data/postgres
##    volumes:
##      - user_postgres:/data/postgres
#    ports:
#      - "5433:5432"
#    networks:
#      - postgres
#    restart: unless-stopped
#
#  pgadmin:
#    container_name: user_pgadmin
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
##    volumes:
##      - user_pgadmin:/var/lib/pgadmin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres
#    restart: unless-stopped
#
#  adminpostgres:
#    container_name: admin_postgres
#    image: postgres
#    environment:
#      POSTGRES_USER: Admin
#      POSTGRES_PASSWORD: password
#      PGDATA: /data/postgres
##    volumes:
##      - admin_postgres:/data/postgres
#    ports:
#      - "5434:5432"
#    networks:
#      - postgres
#    restart: unless-stopped
#
#  searchpostgres:
#    container_name: search_postgres
#    image: postgres
#    environment:
#      POSTGRES_USER: Search
#      POSTGRES_PASSWORD: password
#      PGDATA: /data/postgres
##    volumes:
##      - search_postgres:/data/postgres
#    ports:
#      - "5435:5432"
#    networks:
#      - postgres
#    restart: unless-stopped
#
#  transactionpostgres:
#    container_name: transaction_postgres
#    image: postgres
#    environment:
#      POSTGRES_USER: Transaction
#      POSTGRES_PASSWORD: password
#      PGDATA: /data/postgres
##    volumes:
##      - transaction_postgres:/data/postgres
#    ports:
#      - "5436:5432"
#    networks:
#      - postgres
#    restart: unless-stopped
#
##  zipkin:
##    image: openzipkin/zipkin
##    container_name: zipkin
##    ports:
##      - "9411:9411"
##    networks:
##      - spring
#
#networks:
#  postgres:
#    driver: bridge
#  spring:
#    driver: bridge
#
##volumes:
##  user_postgres:
##  user_pgadmin:
##  admin_postgres:
##  admin_pgadmin:
##  search_postgres:
##  search_pgadmin:
##  transaction_postgres:
##  transaction_pgadmin:

  cassandra:
    image: 'cassandra:latest'
    environment:
      - 'CASSANDRA_DC=datacenter1'
      - 'CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch'
    ports:
      - '9042:9042'



