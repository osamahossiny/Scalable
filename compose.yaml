version: '3'
services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - spring

  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_LISTENERS: PLAINTEXT_INTERNAL://localhost:29092,PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INTERNAL://localhost:29092,PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    networks:
      - spring

  redis:
    image: redis:latest
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - spring
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  user-postgres:
    container_name: user-postgres
    image: postgres
    environment:
      POSTGRES_USER: User
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    ports:
      - "5433:5432"
    networks:
      - spring
    restart: unless-stopped
  #
  pgadmin:
    container_name: user_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    networks:
      - spring
    restart: unless-stopped
  #
  admin-postgres:
    container_name: admin-postgres
    image: postgres
    environment:
      POSTGRES_USER: Admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    ports:
      - "5434:5432"
    networks:
      - spring
    restart: unless-stopped
  #
  search-postgres:
    container_name: search-postgres
    image: postgres
    environment:
      POSTGRES_USER: Search
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    ports:
      - "5435:5432"
    networks:
      - spring
    restart: unless-stopped
  #
  transaction-postgres:
    container_name: transaction-postgres
    image: postgres
    environment:
      POSTGRES_USER: Transaction
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    ports:
      - "5436:5432"
    networks:
      - spring
    restart: unless-stopped

  cassandra:
    image: 'cassandra:latest'
    container_name: cassandra
    environment:
      - 'CASSANDRA_DC=datacenter1'
      - 'CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch'
      - 'CASSANDRA_USER=mykeyspace'
      - 'CASSANDRA_PASSWORD=mykeyspace'
    ports:
      - '9042:9042'
    networks:
      - spring

  discovery-service:
    build:
      context: ./discovery-service
    container_name: discovery-service
    networks:
      - spring
    ports:
      - "8761:8761"

  api-gateway-service:
    build:
      context: ./api-gateway-service
    container_name: api-gateway-service
    environment:
      - 'eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/'
    networks:
      - spring
    ports:
      - "8080:8080"

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8084:8084"
    networks:
      - spring
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - 'eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/'
      - 'spring.datasource.url=jdbc:postgresql://user-postgres:5432/User'
      - 'spring.datasource.username=User'
      - 'spring.datasource.password=password'
      - 'application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970'
      - 'spring.data.redis.host=redis'
    #      - 'spring.cassandra.contact-points=cassandra'
    depends_on:
      - discovery-service
      - api-gateway-service
      - user-postgres
      - kafka
      - redis
      - cassandra
  user-service-2:
    build:
      context: ./user-service
    container_name: user-service-2
    ports:
      - "8094:8094"
    networks:
      - spring
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - 'eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/'
      - 'spring.datasource.url=jdbc:postgresql://user-postgres:5432/User'
      - 'spring.datasource.username=User'
      - 'spring.datasource.password=password'
      - 'application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970'
      - 'spring.data.redis.host=redis'
      - 'server.port=8094'
    #      - 'spring.cassandra.contact-points=cassandra'
    depends_on:
      - discovery-service
      - api-gateway-service
      - user-postgres
      - kafka
      - redis
      - cassandra
  admin-service:
    build:
      context: ./admin-service
    container_name: admin-service
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - 'eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/'
      - 'spring.datasource.url=jdbc:postgresql://admin-postgres:5432/Admin'
      - 'spring.datasource.username=Admin'
      - 'spring.datasource.password=password'
      - 'application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970'
      - 'spring.data.redis.host=redis'
      - 'spring.cassandra.contact-points=cassandra'
    ports:
      - "8083:8083"
    networks:
      - spring
    depends_on:
      - discovery-service
      - api-gateway-service
      - admin-postgres
      - kafka
      - redis
      - cassandra

  admin-service-2:
    build:
      context: ./admin-service
    container_name: admin-service-2
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - 'eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/'
      - 'spring.datasource.url=jdbc:postgresql://admin-postgres:5432/Admin'
      - 'spring.datasource.username=Admin'
      - 'spring.datasource.password=password'
      - 'application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970'
      - 'spring.data.redis.host=redis'
      - 'spring.cassandra.contact-points=cassandra'
      - 'server.port=8093'
    ports:
      - "8093:8093"
    networks:
      - spring
    depends_on:
      - discovery-service
      - api-gateway-service
      - admin-postgres
      - kafka
      - redis
      - cassandra

  search-service:
    build:
      context: ./search-service
    container_name: search-service
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - 'eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/'
      - 'spring.datasource.url=jdbc:postgresql://search-postgres:5432/Search'
      - 'spring.datasource.username=Search'
      - 'spring.datasource.password=password'
      - 'application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970'
      - 'spring.data.redis.host=redis'
      - 'spring.cassandra.contact-points=cassandra'
    ports:
      - "8082:8082"
    networks:
      - spring
    depends_on:
      - discovery-service
      - api-gateway-service
      - search-postgres
      - kafka
      - redis
      - cassandra
  search-service-2:
    build:
      context: ./search-service
    container_name: search-service-2
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - 'eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/'
      - 'spring.datasource.url=jdbc:postgresql://search-postgres:5432/Search'
      - 'spring.datasource.username=Search'
      - 'spring.datasource.password=password'
      - 'application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970'
      - 'spring.data.redis.host=redis'
      - 'spring.cassandra.contact-points=cassandra'
      - 'server.port=8092'
    ports:
      - "8092:8092"
    networks:
      - spring
    depends_on:
      - discovery-service
      - api-gateway-service
      - search-postgres
      - kafka
      - redis
      - cassandra

  transaction-service:
    build:
      context: ./transaction-service
    container_name: transaction-service
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - 'eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/'
      - 'spring.datasource.url=jdbc:postgresql://transaction-postgres:5432/Transaction'
      - 'spring.datasource.username=Transaction'
      - 'spring.datasource.password=password'
      - 'application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970'
      - 'spring.data.redis.host=redis'
    #      - 'spring.cassandra.contact-points=cassandra'
    ports:
      - "8081:8081"
    networks:
      - spring
    depends_on:
      - discovery-service
      - api-gateway-service
      - transaction-postgres
      - kafka
      - redis
      - cassandra

  transaction-service-2:
    build:
      context: ./transaction-service
    container_name: transaction-service-2
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:9092
      - 'eureka.client.service-url.defaultZone=http://discovery-service:8761/eureka/'
      - 'spring.datasource.url=jdbc:postgresql://transaction-postgres:5432/Transaction'
      - 'spring.datasource.username=Transaction'
      - 'spring.datasource.password=password'
      - 'application.security.jwt.secret-key=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970'
      - 'spring.data.redis.host=redis'
      - 'server.port=8091'
    #      - 'spring.cassandra.contact-points=cassandra'
    ports:
      - "8091:8091"
    networks:
      - spring
    depends_on:
      - discovery-service
      - api-gateway-service
      - transaction-postgres
      - kafka
      - redis
      - cassandra
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: "nginx"
    ports:
      - "8000:8000"
    networks:
      - spring
    depends_on:
      - discovery-service
      - api-gateway-service
      - user-service
      - admin-service
      - transaction-service
      - search-service

  haproxy:
    build:
      context: ./haproxy
      dockerfile: Dockerfile
    container_name: haproxy
    ports:
      - 9999:9999
    networks:
      - spring
    depends_on:
      - discovery-service
      - api-gateway-service
      - user-service
      - admin-service
      - transaction-service
      - search-service


networks:
  spring:
    driver: bridge

